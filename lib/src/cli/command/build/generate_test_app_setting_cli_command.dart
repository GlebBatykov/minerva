part of minerva_cli;

class GenerateTestAppSettingCLICommand extends CLICommand<void> {
  final String projectPath;

  final FinalBuildAppSetting buildAppSetting;

  GenerateTestAppSettingCLICommand(
    this.projectPath,
    this.buildAppSetting,
  );

  @override
  Future<void> run() async {
    final testAppSettingPath = '$projectPath/test/test_app_setting.g.dart';

    final testAppSettingFile = File.fromUri(Uri.file(
      testAppSettingPath,
      windows: Platform.isWindows,
    ));

    await testAppSettingFile.create(
      recursive: true,
    );

    final host = buildAppSetting.host;

    final port = buildAppSetting.port;

    final buildType = buildAppSetting.buildType;

    final values = buildAppSetting.values;

    final logging = buildAppSetting.logging;

    await testAppSettingFile.writeAsString('''
// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by Minerva. To update it run the generator again:
// Run 'minerva build'
  
abstract class \$TestAppSetting {
  static const String host = '$host';

  static const int port = $port;

  static const BuildType buildType = BuildType.${buildType.name};

  static const Map<String, dynamic> values = ${values != null ? jsonEncode(values) : null};

  static const Map<String, List<String>> logging = ${logging != null ? jsonEncode(logging) : null};
}
''');
  }
}
